@use "./variables" as vars;

.hide,
.hide-on-desk {
  display: none;
  visibility: hidden;
}

.flex {
  display: flex;

  &-center {
    display: flex;
    align-items: center;
    justify-content: center;
  }
}

.flow {
  &-column-wrap {
    flex-direction: column;
    flex-wrap: wrap;
  }

  &-column-nowrap {
    flex-direction: column;
    flex-wrap: nowrap;
  }

  &-row-wrap {
    flex-direction: row;
    flex-wrap: wrap;
  }

  &-row-nowrap {
    flex-direction: row;
    flex-wrap: nowrap;
  }
}

.align {
  &-center {
    align-items: center;
  }

  &-end {
    align-items: flex-end;
  }

  &-start {
    align-items: flex-start;
  }

  &-stretch {
    align-items: stretch;
  }
}

.justify {
  &-around {
    justify-content: space-around;
  }

  &-between {
    justify-content: space-between;
  }

  &-evenly {
    justify-content: space-evenly;
  }

  &-center {
    justify-content: center;
  }

  &-end {
    justify-content: flex-end;
  }

  &-start {
    justify-content: flex-start;
  }
}

.gap {
  $i: 1;

  @while $i <=6 {
    $i: $i + 1;
    &-0#{$i} {
      gap: var(--space-0#{$i});
    }
  }
}

.is-gapless {
  gap: 0;
}

.sr-only {
  position: absolute;
  width: 0;
  height: 0;
  margin: 0;
  padding: 0;
  overflow: hidden;
  opacity: 0;
  clip: rect(0, 0, 0, 0);
  border: none;
  white-space: nowrap;
}

@media screen and (max-width: #{vars.$breakpoint}) {
  .hide-on-desk {
    display: block;
    visibility: visible;
  }

  .hide-on-mb {
    display: none;
    visibility: hidden;
  }
}
